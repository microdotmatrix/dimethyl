// Content Container Extend

$html-font-size: $fontSize;
$spacing-unit-2: .4rem !default;

$layout-spacing: $spacing-unit !default;
$grid-spacing: ($layout-spacing / ($layout-spacing * 0 + 1)) * $html-font-size;

$global-container: $content-width;

// Layout
@mixin container {
  @include center-margin;
  padding-left: $grid-spacing;
  padding-right: $grid-spacing;
  width: 100%;
  position: relative;
  max-width: $global-container;
}

// Flow Text Mixin Extender 
%flow-text {
   @include flow-text;
}

// Image/Area Color+Gradient Overlay Extender
%overlay {
   position: absolute;
   top: 0;
   bottom: 0;
   left: 0;
   right: 0;
   opacity: 1;
   width: 100%;
   height: 100%;
}

// Gradient Extenders
%light {
   background: rgba(#fff, 0.4);
}

%light-gradient {
   background: linear-gradient(to bottom, rgba(#fff,0.5), rgba(#fff,0.2));
}

%dark {
   background: rgba(#000, 0.4);
}

%dark-gradient {
   background: linear-gradient(to bottom, 
      rgba($black, 0.90) 0%, 
      rgba($black, 0.70) 33%, 
      rgba($black, 0.40) 66%, 
      rgba($black, 0.15) 100%);
}

%radial-green {
   background: radial-gradient(circle, 
      rgba(255,255,255,0) 0%, 
      rgba(177,251,69,0.16008401651676296) 6%, 
      rgba(180,226,119,0.4121848568528974) 13%, 
      rgba(68,96,27,0.6922969016708246) 30%, 
      rgba(35,54,8,0.8575630081134016) 51%, 
      rgba(10,18,0,1) 85%);
}

%radial-blue {
   background: radial-gradient(circle, 
      rgba(198, 255, 255, 0.2) 0%, 
      rgba(69, 244, 251, 0.2) 0%, 
      rgba(119, 202, 226, .35) 35%, 
      rgba(27, 69, 96, .5) 50%, 
      rgba(8, 10, 54, .8) 80%, 
      rgba(0, 3, 18, 1) 100%);
}

%radial-red {
   background: radial-gradient(circle, 
      rgba(255,255,255,0) 0%, 
      rgba(209,37,11,0.2777485994397759) 25%, 
      rgba(125,17,0,0.6166841736694677) 49%, 
      rgba(79,28,18,0.804359243697479) 74%, 
      rgba(24,1,1,1) 100%);
}

// Stolen Bootstrap Close Button Extend

$btn-close-size:             1em;
$btn-close-padding:          .25em;
$btn-close-color:            #000;
$btn-close-bg:               url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$btn-close-color}'><path d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/></svg>");
$btn-close-focus-shadow:     0 0 0 .25rem rgba($blue, .25) !default;
$btn-close-opacity:          .5;
$btn-close-hover-opacity:    .75;
$btn-close-focus-opacity:    1;
$btn-close-disabled-opacity: .25;
$btn-close-white-filter:     invert(1) grayscale(100%) brightness(200%);

%btn-close {
   box-sizing: content-box;
   width: $btn-close-size;
   height: $btn-close-size;
   padding: $btn-close-padding;
   color: $btn-close-color;
   background: transparent $btn-close-bg center / $btn-close-size auto no-repeat; // include transparent for button elements
   border: 0; // for button elements
   //@include border-radius();
   opacity: $btn-close-opacity;
   
   // Override <a>'s hover style
   &:hover {
      color: $btn-close-color;
      text-decoration: none;
      opacity: $btn-close-hover-opacity;
   }
   
   &:focus {
      outline: 0;
      box-shadow: $btn-close-focus-shadow;
      opacity: $btn-close-focus-opacity;
   }
   
   &:disabled,
   &.disabled {
      pointer-events: none;
      user-select: none;
      opacity: $btn-close-disabled-opacity;
   }
}

%btn-close-white {
   filter: $btn-close-white-filter;
}